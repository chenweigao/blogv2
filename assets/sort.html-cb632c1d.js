const t=JSON.parse('{"key":"v-4ffc68c2","path":"/algorithm/sort.html","title":"Sort","lang":"zh-CN","frontmatter":{"description":"Sort GitHub Sort code Abstract Base Sort Function Py 在 Python 中，按照优先级进行排序可以使用 lis.sort(lombda x: (x[1], x[0])) 这样的方式。 举例来说，对于要排序的数组：[(2, 0), (3, 1), (3, 2), (4, 3), (3, 4)], 我们对其进行排序：","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/algorithm/sort.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"Sort"}],["meta",{"property":"og:description","content":"Sort GitHub Sort code Abstract Base Sort Function Py 在 Python 中，按照优先级进行排序可以使用 lis.sort(lombda x: (x[1], x[0])) 这样的方式。 举例来说，对于要排序的数组：[(2, 0), (3, 1), (3, 2), (4, 3), (3, 4)], 我们对其进行排序："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sort\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Abstract","slug":"abstract","link":"#abstract","children":[{"level":3,"title":"Base Sort Function Py","slug":"base-sort-function-py","link":"#base-sort-function-py","children":[]},{"level":3,"title":"cmp_to_key","slug":"cmp-to-key","link":"#cmp-to-key","children":[]}]},{"level":2,"title":"Sort","slug":"sort-1","link":"#sort-1","children":[{"level":3,"title":"Insertion Sort","slug":"insertion-sort","link":"#insertion-sort","children":[]},{"level":3,"title":"Merge Sort","slug":"merge-sort","link":"#merge-sort","children":[]},{"level":3,"title":"Quick Sort","slug":"quick-sort","link":"#quick-sort","children":[]},{"level":3,"title":"Selection Sort","slug":"selection-sort","link":"#selection-sort","children":[]}]},{"level":2,"title":"Sort Template","slug":"sort-template","link":"#sort-template","children":[{"level":3,"title":"Swap","slug":"swap","link":"#swap","children":[]}]},{"level":2,"title":"Problems","slug":"problems","link":"#problems","children":[{"level":3,"title":"LC179 最大数","slug":"lc179-最大数","link":"#lc179-最大数","children":[]},{"level":3,"title":"LC953 验证外星语词典","slug":"lc953-验证外星语词典","link":"#lc953-验证外星语词典","children":[]}]}],"git":{},"readingTime":{"minutes":5.9,"words":1769},"filePathRelative":"algorithm/sort.md","excerpt":"<h1> Sort</h1>\\n<p><a href=\\"https://github.com/chenweigao/_code/tree/master/sort\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">GitHub Sort code</a></p>\\n<h2> Abstract</h2>\\n<h3> Base Sort Function Py</h3>\\n<p>在 Python 中，按照优先级进行排序可以使用 <code>lis.sort(lombda x: (x[1], x[0]))</code> 这样的方式。</p>\\n<p>举例来说，对于要排序的数组：<code>[(2, 0), (3, 1), (3, 2), (4, 3), (3, 4)]</code>, 我们对其进行排序：</p>","autoDesc":true}');export{t as data};
