const e=JSON.parse('{"key":"v-0244025b","path":"/java/android/binder.html","title":"Research on Binder","lang":"zh-CN","frontmatter":{"title":"Research on Binder","date":"2023-06-07T00:00:00.000Z","tag":["kernel","Android"],"category":["Android"],"description":"Overview kernel 侧实现：kernel/linux-5.10/drivers/android/binder.c native 侧实现：system/libhwbinder 💯💯 本文主要是针对 binder 的理解进行的行为，代码列举和文字之间关联度不高，如果想了解原理但是不想对代码进行走读的，可以跳过代码解析的部分，以免陷入太多的细节。 IPC 通信 binder 相比于传统的 IPC 通信拥有比较大的优势：其只需要进行一次拷贝。IPC 通信的原理大致如下： Binder 线程池","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/java/android/binder.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"Research on Binder"}],["meta",{"property":"og:description","content":"Overview kernel 侧实现：kernel/linux-5.10/drivers/android/binder.c native 侧实现：system/libhwbinder 💯💯 本文主要是针对 binder 的理解进行的行为，代码列举和文字之间关联度不高，如果想了解原理但是不想对代码进行走读的，可以跳过代码解析的部分，以免陷入太多的细节。 IPC 通信 binder 相比于传统的 IPC 通信拥有比较大的优势：其只需要进行一次拷贝。IPC 通信的原理大致如下： Binder 线程池"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:tag","content":"kernel"}],["meta",{"property":"article:tag","content":"Android"}],["meta",{"property":"article:published_time","content":"2023-06-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Research on Binder\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Overview","slug":"overview","link":"#overview","children":[]},{"level":2,"title":"IPC 通信","slug":"ipc-通信","link":"#ipc-通信","children":[]},{"level":2,"title":"Binder 线程池","slug":"binder-线程池","link":"#binder-线程池","children":[{"level":3,"title":"startThreadPool()","slug":"startthreadpool","link":"#startthreadpool","children":[]},{"level":3,"title":"IPC.joinThreadPool()","slug":"ipc-jointhreadpool","link":"#ipc-jointhreadpool","children":[]}]},{"level":2,"title":"Binder Application Layer","slug":"binder-application-layer","link":"#binder-application-layer","children":[]},{"level":2,"title":"Binder Framework & Native","slug":"binder-framework-native","link":"#binder-framework-native","children":[{"level":3,"title":"BBinder","slug":"bbinder","link":"#bbinder","children":[]},{"level":3,"title":"BpBinder","slug":"bpbinder","link":"#bpbinder","children":[]}]},{"level":2,"title":"Binder Driver","slug":"binder-driver","link":"#binder-driver","children":[{"level":3,"title":"binder_ioctl()","slug":"binder-ioctl","link":"#binder-ioctl","children":[]},{"level":3,"title":"binder_transaction()","slug":"binder-transaction","link":"#binder-transaction","children":[]}]},{"level":2,"title":"Binder Protocol","slug":"binder-protocol","link":"#binder-protocol","children":[{"level":3,"title":"Abstract of BC_PROTOCOL","slug":"abstract-of-bc-protocol","link":"#abstract-of-bc-protocol","children":[]},{"level":3,"title":"BC_TRANSACTION & BC_REPLY","slug":"bc-transaction-bc-reply","link":"#bc-transaction-bc-reply","children":[]},{"level":3,"title":"BC_FREE_BUFFER","slug":"bc-free-buffer","link":"#bc-free-buffer","children":[]},{"level":3,"title":"BR_TRANSACTION_COMPLETE","slug":"br-transaction-complete","link":"#br-transaction-complete","children":[]},{"level":3,"title":"BR_TRANSACTION","slug":"br-transaction","link":"#br-transaction","children":[]}]},{"level":2,"title":"mmap 技术","slug":"mmap-技术","link":"#mmap-技术","children":[]},{"level":2,"title":"Pracel","slug":"pracel","link":"#pracel","children":[{"level":3,"title":"Call Stack","slug":"call-stack","link":"#call-stack","children":[]},{"level":3,"title":"Pracel Object(Java)","slug":"pracel-object-java","link":"#pracel-object-java","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{},"readingTime":{"minutes":16.83,"words":5048},"filePathRelative":"java/android/binder.md","localizedDate":"2023年6月7日","excerpt":"<h2> Overview</h2>\\n<p>kernel 侧实现：kernel/linux-5.10/drivers/android/binder.c</p>\\n<p>native 侧实现：system/libhwbinder</p>\\n<p>💯💯 本文主要是针对 binder 的理解进行的行为，代码列举和文字之间关联度不高，如果想了解原理但是不想对代码进行走读的，可以跳过代码解析的部分，以免陷入太多的细节。</p>\\n<h2> IPC 通信</h2>\\n<p>binder 相比于传统的 IPC 通信拥有比较大的优势：其只需要进行一次拷贝。IPC 通信的原理大致如下：</p>\\n<h2> Binder 线程池</h2>","autoDesc":true}');export{e as data};
