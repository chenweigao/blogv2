const t=JSON.parse('{"key":"v-af5a71f0","path":"/blogs/Networks/epoll.html","title":"C 语言 socket 实现以及 Epoll, Libevent","lang":"zh-CN","frontmatter":{"title":"C 语言 socket 实现以及 Epoll, Libevent","date":"2019-08-08T00:00:00.000Z","tag":["tcp/ip"],"category":["Networks"],"description":"Socket Data Struct 地址转化函数：inet_pton(AF_INET, \\"127.0.0.1\\", &amp;serv.sin_addr.s_addr); 和 inet_ntop。 其中 p 表示表达(presentation), n 表示 数值(numeric) struct sockaddr_in addr; char str[INET_ADDRSTRLEN]; inet_ntop(AF_INET, &amp;addr.sin_addr, str, sizeof(str));","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/blogs/Networks/epoll.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"C 语言 socket 实现以及 Epoll, Libevent"}],["meta",{"property":"og:description","content":"Socket Data Struct 地址转化函数：inet_pton(AF_INET, \\"127.0.0.1\\", &amp;serv.sin_addr.s_addr); 和 inet_ntop。 其中 p 表示表达(presentation), n 表示 数值(numeric) struct sockaddr_in addr; char str[INET_ADDRSTRLEN]; inet_ntop(AF_INET, &amp;addr.sin_addr, str, sizeof(str));"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:tag","content":"tcp/ip"}],["meta",{"property":"article:published_time","content":"2019-08-08T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C 语言 socket 实现以及 Epoll, Libevent\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-08-08T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Socket","slug":"socket","link":"#socket","children":[{"level":3,"title":"Data Struct","slug":"data-struct","link":"#data-struct","children":[]},{"level":3,"title":"值-结果参数","slug":"值-结果参数","link":"#值-结果参数","children":[]},{"level":3,"title":"listen()","slug":"listen","link":"#listen","children":[]},{"level":3,"title":"accept()","slug":"accept","link":"#accept","children":[]}]},{"level":2,"title":"select, poll and epoll","slug":"select-poll-and-epoll","link":"#select-poll-and-epoll","children":[{"level":3,"title":"select 的缺点","slug":"select-的缺点","link":"#select-的缺点","children":[]}]},{"level":2,"title":"epoll","slug":"epoll","link":"#epoll","children":[]},{"level":2,"title":"epoll 三种工作模式","slug":"epoll-三种工作模式","link":"#epoll-三种工作模式","children":[{"level":3,"title":"突破文件描述符上限","slug":"突破文件描述符上限","link":"#突破文件描述符上限","children":[]}]},{"level":2,"title":"Libevent Install","slug":"libevent-install","link":"#libevent-install","children":[{"level":3,"title":"Linux Install","slug":"linux-install","link":"#linux-install","children":[]},{"level":3,"title":"Window Install","slug":"window-install","link":"#window-install","children":[]}]},{"level":2,"title":"Libevent 框架概述","slug":"libevent-框架概述","link":"#libevent-框架概述","children":[]},{"level":2,"title":"bufferevent","slug":"bufferevent","link":"#bufferevent","children":[]}],"git":{},"readingTime":{"minutes":9.82,"words":2946},"filePathRelative":"blogs/Networks/epoll.md","localizedDate":"2019年8月8日","excerpt":"<h2> Socket</h2>\\n<h3> Data Struct</h3>\\n<p>地址转化函数：<code>inet_pton(AF_INET, \\"127.0.0.1\\", &amp;serv.sin_addr.s_addr);</code> 和 <code>inet_ntop</code>。 其中 p 表示<strong>表达(presentation)</strong>, n 表示 <strong>数值(numeric)</strong></p>\\n<div class=\\"language-c\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token keyword\\">struct</span> <span class=\\"token class-name\\">sockaddr_in</span> addr<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">char</span> str<span class=\\"token punctuation\\">[</span>INET_ADDRSTRLEN<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token function\\">inet_ntop</span><span class=\\"token punctuation\\">(</span>AF_INET<span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">&amp;</span>addr<span class=\\"token punctuation\\">.</span>sin_addr<span class=\\"token punctuation\\">,</span> str<span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">sizeof</span><span class=\\"token punctuation\\">(</span>str<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{t as data};
