import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as e,c,a as s,b as n,d as i,f as a}from"./app-22cda79c.js";const l={},u=a(`<h2 id="new-coder-input" tabindex="-1"><a class="header-anchor" href="#new-coder-input" aria-hidden="true">#</a> New-Coder Input</h2><p>牛客网上面刷题时可能用到的多组输入输出：</p><ul><li>输入 m, n 两个数：</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code>str_in <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>_<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> str_in<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
</code></pre></div><ul><li>多组输入，第一行 n 表示数的数量，第二行输入这 n 个数：</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code>n<span class="token punctuation">,</span> m <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>输入有多组数据：</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> sys

s <span class="token operator">=</span> sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> <span class="token keyword">not</span> s<span class="token punctuation">:</span>
    <span class="token keyword">break</span>
</code></pre></div><h2 id="format-output" tabindex="-1"><a class="header-anchor" href="#format-output" aria-hidden="true">#</a> Format Output</h2>`,9),r=s("code",null,"str()",-1),k=s("code",null,"repr()",-1),d=s("code",null,"print()",-1),g={href:"http://www.runoob.com/python3/python3-inputoutput.html",target:"_blank",rel:"noopener noreferrer"},h=a(`<p>The usage of <code>format</code> , one thing to note :</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0} and {1}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;Google&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Baidu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Google <span class="token keyword">and</span> Baidu
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{1} and {0}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">&#39;Google&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Baidu&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> Baidu <span class="token keyword">and</span> Google

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;some string&#39;</span></span><span class="token punctuation">)</span>
<span class="token comment"># raw string</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{0:2d} {1:3f}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># specifies the length of the placeholder</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;{name}: age}&#39;</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;weigao&#39;</span><span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token string">&#39;18&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> weigao<span class="token punctuation">:</span> <span class="token number">18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The <code>%</code> also can be use to format output, but it is an old way, so use it as little as possible.</p><h3 id="input" tabindex="-1"><a class="header-anchor" href="#input" aria-hidden="true">#</a> Input</h3><p>Python provides the <code>input()</code> function from the standard input to a line, and the default standard input is the keyboard.</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;please input: &quot;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;your input is: &quot;</span><span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span>
</code></pre></div><p>In <strong>Newcoder</strong> programming test, somethings we need custom input, there are some ways for us to reference:</p><ul><li>Mutil input and output</li></ul><p>例如第一行表示接下来要输入的行数，接下来若干行输入，并且涉及多组输入输出时：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        n <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        lists <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>
        <span class="token comment"># the code</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
</code></pre></div>`,10);function m(b,y){const t=o("ExternalLinkIcon");return e(),c("div",null,[u,s("p",null,[n("When output, we can use "),r,n(", "),k,n(" and "),d,n(", the different between them could be found in "),s("a",g,[n("Python3 Tutorial"),i(t)]),n(".")]),h])}const w=p(l,[["render",m],["__file","io.html.vue"]]);export{w as default};
