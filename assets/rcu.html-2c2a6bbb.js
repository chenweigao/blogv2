const e=JSON.parse('{"key":"v-401f2813","path":"/linux/kernel/rcu.html","title":"RCU(todo)","lang":"zh-CN","frontmatter":{"title":"RCU(todo)","date":"2023-06-25T00:00:00.000Z","author":"weigao","category":["Kernel"],"description":"RCU 什么是 RCU 状态？ 在Linux内核中，RCU（Read-Copy-Update）是一种读取数据不加锁的机制，它通过使用复制而不是传统的互斥量机制来实现对共享数据结构的并发安全。 也就是说 RCU 是一种同步机制，其可以支持一个写操作和多个读操作同时进行。对比而言，读写锁是一种排他锁，写的同时不允许其他读的操作。 ❗本文为了研究清楚 idle, 故针对 idle 流程中的 RCU 进行研究。 🔗 名词解释 Grace period: 宽限期 Quiescent state: 静止态","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/linux/kernel/rcu.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"RCU(todo)"}],["meta",{"property":"og:description","content":"RCU 什么是 RCU 状态？ 在Linux内核中，RCU（Read-Copy-Update）是一种读取数据不加锁的机制，它通过使用复制而不是传统的互斥量机制来实现对共享数据结构的并发安全。 也就是说 RCU 是一种同步机制，其可以支持一个写操作和多个读操作同时进行。对比而言，读写锁是一种排他锁，写的同时不允许其他读的操作。 ❗本文为了研究清楚 idle, 故针对 idle 流程中的 RCU 进行研究。 🔗 名词解释 Grace period: 宽限期 Quiescent state: 静止态"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"weigao"}],["meta",{"property":"article:published_time","content":"2023-06-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RCU(todo)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"weigao\\"}]}"]]},"headers":[{"level":2,"title":"RCU","slug":"rcu","link":"#rcu","children":[]},{"level":2,"title":"QS","slug":"qs","link":"#qs","children":[]},{"level":2,"title":"rcu_idle_enter","slug":"rcu-idle-enter","link":"#rcu-idle-enter","children":[]},{"level":2,"title":"note_gp_changes","slug":"note-gp-changes","link":"#note-gp-changes","children":[]}],"git":{},"readingTime":{"minutes":3.82,"words":1147},"filePathRelative":"linux/kernel/rcu.md","localizedDate":"2023年6月25日","excerpt":"<h2> RCU</h2>\\n<p>什么是 RCU 状态？</p>\\n<blockquote>\\n<p>在Linux内核中，RCU（Read-Copy-Update）是一种读取数据不加锁的机制，它通过使用复制而不是传统的互斥量机制来实现对共享数据结构的并发安全。</p>\\n</blockquote>\\n<p>也就是说 RCU 是一种同步机制，其可以支持一个写操作和多个读操作同时进行。对比而言，读写锁是一种排他锁，写的同时不允许其他读的操作。</p>\\n<p>❗本文为了研究清楚 idle, 故针对 idle 流程中的 RCU 进行研究。</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">🔗 名词解释</p>\\n<ul>\\n<li>Grace period: 宽限期</li>\\n<li>Quiescent state: 静止态</li>\\n</ul>\\n</div>","autoDesc":true}');export{e as data};
