const e=JSON.parse('{"key":"v-158324fe","path":"/architecture/virtual_memory.html","title":"Virtual Memory","lang":"zh-CN","frontmatter":{"title":"Virtual Memory","date":"2022-08-25T00:00:00.000Z","category":["Arm"],"description":"Abstract 本文主要讲述和理解虚拟内存（后文简称 VM， VA 等）的概念，行文可能较为跳跃，需要特别注意。 Virtual Memory Abstract Virtual memory is a technique used by operating systems to enable programs to use more memory than is physically available in the system. When a program accesses memory, the address it uses is a virtual address, which is translated by the hardware into a physical address that corresponds to a location in physical memory. This translation process can be slow, especially if it has to be performed every time the program accesses memory.","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/architecture/virtual_memory.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"Virtual Memory"}],["meta",{"property":"og:description","content":"Abstract 本文主要讲述和理解虚拟内存（后文简称 VM， VA 等）的概念，行文可能较为跳跃，需要特别注意。 Virtual Memory Abstract Virtual memory is a technique used by operating systems to enable programs to use more memory than is physically available in the system. When a program accesses memory, the address it uses is a virtual address, which is translated by the hardware into a physical address that corresponds to a location in physical memory. This translation process can be slow, especially if it has to be performed every time the program accesses memory."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:published_time","content":"2022-08-25T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Virtual Memory\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-25T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Abstract","slug":"abstract","link":"#abstract","children":[]},{"level":2,"title":"Virtual Memory","slug":"virtual-memory","link":"#virtual-memory","children":[{"level":3,"title":"Abstract","slug":"abstract-1","link":"#abstract-1","children":[]},{"level":3,"title":"虚拟内存与进程","slug":"虚拟内存与进程","link":"#虚拟内存与进程","children":[]},{"level":3,"title":"虚拟进程与页表","slug":"虚拟进程与页表","link":"#虚拟进程与页表","children":[]},{"level":3,"title":"Understanding","slug":"understanding","link":"#understanding","children":[]}]},{"level":2,"title":"TLB","slug":"tlb","link":"#tlb","children":[{"level":3,"title":"What is TLB?","slug":"what-is-tlb","link":"#what-is-tlb","children":[]},{"level":3,"title":"TLB Miss","slug":"tlb-miss","link":"#tlb-miss","children":[]}]},{"level":2,"title":"Page","slug":"page","link":"#page","children":[{"level":3,"title":"页面大小的权衡","slug":"页面大小的权衡","link":"#页面大小的权衡","children":[]},{"level":3,"title":"Page Fault","slug":"page-fault","link":"#page-fault","children":[]},{"level":3,"title":"Virtual page number and Page offset","slug":"virtual-page-number-and-page-offset","link":"#virtual-page-number-and-page-offset","children":[]},{"level":3,"title":"页表的映射方式？","slug":"页表的映射方式","link":"#页表的映射方式","children":[]},{"level":3,"title":"TLB 和 cache 的映射方式？","slug":"tlb-和-cache-的映射方式","link":"#tlb-和-cache-的映射方式","children":[]}]}],"git":{},"readingTime":{"minutes":12.27,"words":3681},"filePathRelative":"architecture/virtual_memory.md","localizedDate":"2022年8月25日","excerpt":"<h2> Abstract</h2>\\n<p>本文主要讲述和理解虚拟内存（后文简称 VM， VA 等）的概念，行文可能较为跳跃，需要特别注意。</p>\\n<h2> Virtual Memory</h2>\\n<h3> Abstract</h3>\\n<blockquote>\\n<p>Virtual memory is a technique used by operating systems to enable programs to <strong>use more memory than is physically available</strong> in the system. When a program accesses memory, the address it uses is a virtual address, which is <strong>translated by the hardware into a physical address</strong> that corresponds to a location in physical memory. This translation process can be slow, especially if it has to be performed every time the program accesses memory.</p>\\n</blockquote>","autoDesc":true}');export{e as data};
