const t=JSON.parse('{"key":"v-a5adecbc","path":"/linux/kernel/init_h.html","title":"init.h in Thermal","lang":"zh-CN","frontmatter":{"description":"init.h in Thermal Abstract 本文分析 Linux 源码 init.h 文件，并研究其中涉及到的内核初始化过程、Thermal 模块如何调用等问题。 initcall initcall{n}.init 内核初始化过程中的调用顺序[1]：所有的 __init 函数在区段 .initcall.init 中还保存了一份函数指针，在初始化时内核会通过这些函数指针调用这些 __init 函数指针，并在整个初始化完成后，释放整个 init 区段，包括 .init.text，.initcall.init 等。","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/linux/kernel/init_h.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"init.h in Thermal"}],["meta",{"property":"og:description","content":"init.h in Thermal Abstract 本文分析 Linux 源码 init.h 文件，并研究其中涉及到的内核初始化过程、Thermal 模块如何调用等问题。 initcall initcall{n}.init 内核初始化过程中的调用顺序[1]：所有的 __init 函数在区段 .initcall.init 中还保存了一份函数指针，在初始化时内核会通过这些函数指针调用这些 __init 函数指针，并在整个初始化完成后，释放整个 init 区段，包括 .init.text，.initcall.init 等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"init.h in Thermal\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Abstract","slug":"abstract","link":"#abstract","children":[]},{"level":2,"title":"initcall","slug":"initcall","link":"#initcall","children":[{"level":3,"title":"initcall{n}.init","slug":"initcall-n-init","link":"#initcall-n-init","children":[]}]},{"level":2,"title":"Thermal postcore_initcall()","slug":"thermal-postcore-initcall","link":"#thermal-postcore-initcall","children":[]},{"level":2,"title":"__section","slug":"section","link":"#section","children":[{"level":3,"title":"__attribute__","slug":"attribute","link":"#attribute","children":[]}]},{"level":2,"title":"Linux 内核初始化","slug":"linux-内核初始化","link":"#linux-内核初始化","children":[{"level":3,"title":"start_kernel","slug":"start-kernel","link":"#start-kernel","children":[]},{"level":3,"title":"init 线程","slug":"init-线程","link":"#init-线程","children":[]}]},{"level":2,"title":"Reference","slug":"reference","link":"#reference","children":[]}],"git":{},"readingTime":{"minutes":5.24,"words":1571},"filePathRelative":"linux/kernel/init_h.md","excerpt":"<h1> init.h in Thermal</h1>\\n<h2> Abstract</h2>\\n<p>本文分析 Linux 源码 <code>init.h</code> 文件，并研究其中涉及到的内核初始化过程、Thermal 模块如何调用等问题。</p>\\n<h2> initcall</h2>\\n<h3> initcall{n}.init</h3>\\n<p>内核初始化过程中的调用顺序<sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">：所有的 <code>__init</code> 函数在区段 <code>.initcall.init</code> 中还保存了一份函数指针，在初始化时内核会通过这些函数指针调用这些 <code>__init</code> 函数指针，并在整个初始化完成后，释放整个 <code>init</code> 区段，包括 <code>.init.text</code>，<code>.initcall.init</code> 等。</a></p>","autoDesc":true}');export{t as data};
