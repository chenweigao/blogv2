import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o as i,c as l,d as n,a as s,b as p,f as a}from"./app-22cda79c.js";const r={},d=a('<h1 id="thermal-overview" tabindex="-1"><a class="header-anchor" href="#thermal-overview" aria-hidden="true">#</a> Thermal Overview</h1><h2 id="abstract" tabindex="-1"><a class="header-anchor" href="#abstract" aria-hidden="true">#</a> Abstract</h2><p>Linux Thermal 是 Linux 系统下温度控制相关的模块，主要用来控制系统运行中芯片产生的热量。配合 ic 内部温度传感器，对 ic 温度进行管控，保证系统稳定性<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>。</p><p>其基本的架构可以简单概括为下图：</p>',4),u=a(`<p>Thermal 中有一些基础概念，下文会结合定义的代码对其进行分析。</p><h2 id="thermal-zone-device" tabindex="-1"><a class="header-anchor" href="#thermal-zone-device" aria-hidden="true">#</a> Thermal Zone Device</h2><p>Thermal Zone 代表一个温控区间，将其看成一个虚拟的温度 sensor, 但是需要有物理 sensor 与其关联才可以发挥作用。 需要注意的是，一个 Thermal zone 最多可以关联一个 sensor, 但是一个 sensor 可以是多个硬件 Sensor 的混合。</p><p>🤔🤔🤔 为什么一个 Thermal zone 只能关联一个 sensor? 系统中会有多个 Thermal zone 吗？</p><p>Thermal Zone Device 在 Thermal 框架中理解为<strong>获取温度的设备</strong>。</p><p>我们列举并分析其结构组成：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>// thermal.h
struct thermal_zone_device {
	int id;
	char type[THERMAL_NAME_LENGTH];
	struct device device;
	struct attribute_group trips_attribute_group;
	struct thermal_attr *trip_temp_attrs;
	struct thermal_attr *trip_type_attrs;
	struct thermal_attr *trip_hyst_attrs;
	void *devdata;
	int trips;
	unsigned long trips_disabled;	/* bitmap for disabled trips */
	int passive_delay;
	int polling_delay;
	int temperature;
	int last_temperature;
	int emul_temperature;
	int passive;
	int prev_low_trip;
	int prev_high_trip;
	unsigned int forced_passive;
	atomic_t need_update;
	struct thermal_zone_device_ops *ops;
	struct thermal_zone_params *tzp;
	struct thermal_governor *governor;
	void *governor_data;
	struct list_head thermal_instances;
	struct ida ida;
	struct mutex lock;
	struct list_head node;
	struct delayed_work poll_queue;
	enum thermal_notify_event notify_event;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了更方便分析，我们给出一个简单的类图：</p>`,8),k=a(`<h3 id="thermal-zone-params-tzp" tabindex="-1"><a class="header-anchor" href="#thermal-zone-params-tzp" aria-hidden="true">#</a> thermal_zone_params *tzp</h3><p>在上述结构体的 24 行，结构体细节如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* Structure to define Thermal Zone parameters */</span>
<span class="token keyword">struct</span> <span class="token class-name">thermal_zone_params</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> governor_name<span class="token punctuation">[</span>THERMAL_NAME_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span>
    
	bool no_hwmon<span class="token punctuation">;</span>

	<span class="token keyword">int</span> num_tbps<span class="token punctuation">;</span>
    
	<span class="token keyword">struct</span> <span class="token class-name">thermal_bind_params</span> <span class="token operator">*</span>tbp<span class="token punctuation">;</span>

	u32 sustainable_power<span class="token punctuation">;</span>

	s32 k_po<span class="token punctuation">;</span>

	s32 k_pu<span class="token punctuation">;</span>

	s32 k_i<span class="token punctuation">;</span>

	s32 k_d<span class="token punctuation">;</span>

	s32 integral_cutoff<span class="token punctuation">;</span>

	<span class="token keyword">int</span> slope<span class="token punctuation">;</span>
	
	<span class="token keyword">int</span> offset<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>🟡🟡🟡发散：如寻找对应的 governor: <code>governor = __find_governor(tz-&gt;tzp-&gt;governor_name);</code> 就用到了 <code>tzp-&gt;governor_name</code> 这个参数。</p><p>我们看一下 <code>tzp</code> 的位置：</p>`,5),m=a(`<p>我们去掉原生代码中的注释信息，然后用表格的形式一一分析这些参数：</p><table><thead><tr><th style="text-align:left;">param</th><th>type</th><th>comments</th><th>means</th></tr></thead><tbody><tr><td style="text-align:left;">governor_name</td><td>char[]</td><td></td><td></td></tr><tr><td style="text-align:left;">no_hwmon</td><td>bool</td><td><em>a boolean to indicate if the thermal to hwmon sysfs interface is required. when no_hwmon == false, a hwmon sysfs interface will be created. when no_hwmon == true, nothing will be done</em></td><td></td></tr><tr><td style="text-align:left;">num_tbps</td><td>int</td><td><em>Number of tbp entries</em></td><td></td></tr><tr><td style="text-align:left;">tbp</td><td>struct</td><td><em>Structure that holds binding parameters for a zone</em></td><td>struct thermal_bind_params 结构体定义在 <code>thermal.h</code></td></tr><tr><td style="text-align:left;">sustainable_power</td><td>u32</td><td><em>Sustainable power (heat) that this thermal zone can dissipate in mW</em></td><td>该热区可消散的持续功率</td></tr><tr><td style="text-align:left;">k_po</td><td>s32</td><td><em>Proportional parameter of the PID controller when</em></td><td>PID 控制器的比例参数</td></tr><tr><td style="text-align:left;">k_pu</td><td>s32</td><td><em>Proportional parameter of the PID controller when undershooting</em></td><td></td></tr><tr><td style="text-align:left;">k_i</td><td>s32</td><td><em>Integral parameter of the PID controller</em></td><td></td></tr><tr><td style="text-align:left;">k_d</td><td>s32</td><td><em>Derivative parameter of the PID controller</em></td><td></td></tr><tr><td style="text-align:left;">integral_cutoff</td><td>s32</td><td><em>threshold below which the error is no longer accumulated</em></td><td>低于此阈值的错误将不再累计</td></tr><tr><td style="text-align:left;">slope</td><td>int</td><td><em>slope of a linear temperature adjustment curve.</em></td><td>线性温度调节曲线的斜率</td></tr><tr><td style="text-align:left;">offset</td><td>int</td><td><em>offset of a linear temperature adjustment curve.</em></td><td>线性温度调节曲线的偏移</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">s32, u32 in int-l64.h</p><div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">typedef</span> __signed__ <span class="token keyword">int</span> __s32<span class="token punctuation">;</span>
<span class="token keyword">typedef</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> __u32<span class="token punctuation">;</span>
</code></pre></div></div><h4 id="thermal-bind-params" tabindex="-1"><a class="header-anchor" href="#thermal-bind-params" aria-hidden="true">#</a> thermal_bind_params</h4><p>thermal_bind_params (thermal.h)结构体如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/* Structure that holds binding parameters for a zone */</span>
<span class="token keyword">struct</span> <span class="token class-name">thermal_bind_params</span> <span class="token punctuation">{</span>
	<span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span>cdev<span class="token punctuation">;</span>

	<span class="token keyword">int</span> weight<span class="token punctuation">;</span>

	<span class="token keyword">int</span> trip_mask<span class="token punctuation">;</span>

	<span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span>binding_limits<span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>match<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz<span class="token punctuation">,</span>
			<span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span>cdev<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在深入分析之前，我们需要了解到，<code>thermal_bind_params </code> 隶属结构如下：</p>`,7),v=a('<table><thead><tr><th style="text-align:left;">param</th><th>type</th><th>comments</th><th>means</th></tr></thead><tbody><tr><td style="text-align:left;">weight</td><td>int</td><td><em>This is a measure of &#39;how effectively these devices can cool &#39;this&#39; thermal zone. It shall be determined by platform characterization. This value is relative to the rest of the weights so a cooling device whose weight is double that of another cooling device is twice as effective. See Documentation/driver-api/thermal/sysfs-api.rst for more information.</em></td><td></td></tr><tr><td style="text-align:left;">trip_mask</td><td>int</td><td><em>This is a bit mask that gives the binding relation between this thermal zone and cdev, for a particular trip point.</em></td><td></td></tr><tr><td style="text-align:left;">binding_limits</td><td>unsigned long</td><td><em>This is an array of cooling state limits. Must have exactly 2 * thermal_zone.number_of_trip_points. It is an array consisting of tuples &lt;lower-state upper-state&gt; of state limits. Each trip will be associated with one state limit tuple when binding. A NULL pointer means &lt;THERMAL_NO_LIMITS THERMAL_NO_LIMITS&gt; on all trips.</em></td><td></td></tr><tr><td style="text-align:left;">match</td><td></td><td><code>int (*match) (struct thermal_zone_device *tz, struct thermal_cooling_device *cdev);</code></td><td></td></tr></tbody></table><h3 id="thermal-zone-device-ops-ops" tabindex="-1"><a class="header-anchor" href="#thermal-zone-device-ops-ops" aria-hidden="true">#</a> thermal_zone_device_ops *ops</h3><p>指的是 thermal 可以操作的类型：</p><p>其隶属的结构如下：</p>',4),h=a(`<p>其结构体定义如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device_ops</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>bind<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span>
		     <span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>unbind<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span>
		       <span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_temp<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>set_trips<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_mode<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span>
			 <span class="token keyword">enum</span> <span class="token class-name">thermal_device_mode</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>set_mode<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span>
		<span class="token keyword">enum</span> <span class="token class-name">thermal_device_mode</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_trip_type<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span>
		<span class="token keyword">enum</span> <span class="token class-name">thermal_trip_type</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_trip_temp<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>set_trip_temp<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_trip_hyst<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>set_trip_hyst<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_crit_temp<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>set_emul_temp<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_trend<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span>
			  <span class="token keyword">enum</span> <span class="token class-name">thermal_trend</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>notify<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">,</span>
		       <span class="token keyword">enum</span> <span class="token class-name">thermal_trip_type</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="int-get-temp" tabindex="-1"><a class="header-anchor" href="#int-get-temp" aria-hidden="true">#</a> int (*get_temp)</h4><p>获取温度 <code>int (*get_temp) (struct thermal_zone_device *, int *);</code></p><div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>d<span class="token operator">-&gt;</span>override_ops <span class="token operator">&amp;&amp;</span> d<span class="token operator">-&gt;</span>override_ops<span class="token operator">-&gt;</span>get_temp<span class="token punctuation">)</span>
	<span class="token keyword">return</span> d<span class="token operator">-&gt;</span>override_ops<span class="token operator">-&gt;</span><span class="token function">get_temp</span><span class="token punctuation">(</span>zone<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="int-get-trip-temp" tabindex="-1"><a class="header-anchor" href="#int-get-trip-temp" aria-hidden="true">#</a> int (*get_trip_temp)</h4><p>在 <code>thermal_sysfs.c</code> 中调用：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token class-name">ssize_t</span>
<span class="token function">trip_point_temp_show</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">device_attribute</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span>
                     <span class="token keyword">char</span> <span class="token operator">*</span>buf<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
        <span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz <span class="token operator">=</span> <span class="token function">to_thermal_zone</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> trip<span class="token punctuation">,</span> ret<span class="token punctuation">;</span>
        <span class="token keyword">int</span> temperature<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span>get_trip_temp<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sscanf</span><span class="token punctuation">(</span>attr<span class="token operator">-&gt;</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;trip_point_%d_temp&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>trip<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span>

        ret <span class="token operator">=</span> tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span><span class="token function">get_trip_temp</span><span class="token punctuation">(</span>tz<span class="token punctuation">,</span> trip<span class="token punctuation">,</span> <span class="token operator">&amp;</span>temperature<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">sprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token string">&quot;%d\\n&quot;</span><span class="token punctuation">,</span> temperature<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="int-set-trip-temp" tabindex="-1"><a class="header-anchor" href="#int-set-trip-temp" aria-hidden="true">#</a> int (*set_trip_temp)</h4><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">static</span> <span class="token class-name">ssize_t</span>
<span class="token function">trip_point_temp_store</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">device</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">struct</span> <span class="token class-name">device_attribute</span> <span class="token operator">*</span>attr<span class="token punctuation">,</span>
                      <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span> <span class="token class-name">size_t</span> count<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
        <span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz <span class="token operator">=</span> <span class="token function">to_thermal_zone</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> trip<span class="token punctuation">,</span> ret<span class="token punctuation">;</span>
        <span class="token keyword">int</span> temperature<span class="token punctuation">,</span> hyst <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">enum</span> <span class="token class-name">thermal_trip_type</span> type<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span>set_trip_temp<span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token operator">-</span>EPERM<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sscanf</span><span class="token punctuation">(</span>attr<span class="token operator">-&gt;</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token string">&quot;trip_point_%d_temp&quot;</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>trip<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">kstrtoint</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>temperature<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">return</span> <span class="token operator">-</span>EINVAL<span class="token punctuation">;</span>

        ret <span class="token operator">=</span> tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span><span class="token function">set_trip_temp</span><span class="token punctuation">(</span>tz<span class="token punctuation">,</span> trip<span class="token punctuation">,</span> temperature<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span>get_trip_hyst<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                ret <span class="token operator">=</span> tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span><span class="token function">get_trip_hyst</span><span class="token punctuation">(</span>tz<span class="token punctuation">,</span> trip<span class="token punctuation">,</span> <span class="token operator">&amp;</span>hyst<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
                        <span class="token keyword">return</span> ret<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        ret <span class="token operator">=</span> tz<span class="token operator">-&gt;</span>ops<span class="token operator">-&gt;</span><span class="token function">get_trip_type</span><span class="token punctuation">(</span>tz<span class="token punctuation">,</span> trip<span class="token punctuation">,</span> <span class="token operator">&amp;</span>type<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ret<span class="token punctuation">)</span>
                <span class="token keyword">return</span> ret<span class="token punctuation">;</span>

        <span class="token function">thermal_notify_tz_trip_change</span><span class="token punctuation">(</span>tz<span class="token operator">-&gt;</span>id<span class="token punctuation">,</span> trip<span class="token punctuation">,</span> type<span class="token punctuation">,</span> temperature<span class="token punctuation">,</span> hyst<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token function">thermal_zone_device_update</span><span class="token punctuation">(</span>tz<span class="token punctuation">,</span> THERMAL_EVENT_UNSPECIFIED<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个调用中有几个知识点可以注意的：</p><ol><li><p>关于 <code>sscanf()</code>: <code>sscanf(attr-&gt;attr.name, &quot;trip_point_%d_temp&quot;, &amp;trip) != 1</code>, 这个调用的意思是说，<code>attr-&gt;attr.name</code> 类似于 <code>trip_point_123_temp</code>, 然后我们可以把这个 <code>123</code> 拿出来写进 <code>trip</code> 中去，并返回写入变量的个数。在这个例子中我们只写入了 <code>trip</code>, 所以写入成功的话就返回 <code>1</code>.</p></li><li><p><code>kstrtoint(buf, 10, &amp;temperature)</code> 是将字符串转化为 <code>int</code> 整数，我们将 <code>buf</code> 中的值以 10 进制的形式传递给了 <code>temperature</code>.</p></li><li><p>返回的错误码：<br><code>#define EINVAL 22</code>;<br><code>#define EPERM 1;</code></p></li></ol><h3 id="trip-point" tabindex="-1"><a class="header-anchor" href="#trip-point" aria-hidden="true">#</a> Trip point</h3><blockquote><p>The binding of the cooling devices to the trip point is left for the user.</p></blockquote><p>触发点由 Thermal Zone 维护，每个 Thermal Zone 可以维护多个 Trip Point, 其包含的信息有：</p><ul><li><p>temp: 当前温度</p></li><li><p>type: 类型，有以下方式：passive、active、hot、critical</p></li><li><p>cooling device: 绑定信息。</p><p>这个绑定信息指的是 Trip Point 和 cooling device 的绑定关系，即当 Trip Point 触发后由哪个 cooling device 去实施冷却措施。每个 Trip Point 要与 cooling device 绑定，才有其实际意义。</p><p>cooling device 是实际对系统实施冷却措施的驱动，是温控的执行者。cooling device 维护一个 cooling 等级 state, state 越高则表示系统的冷却需求越高（注意到 cooling device 只根据 state 进行冷却操作）。</p><p>🤔🤔🤔 state 这个取值是由谁决定的？state 的计算由 Thermal Governor 完成。</p></li></ul><h3 id="source-code" tabindex="-1"><a class="header-anchor" href="#source-code" aria-hidden="true">#</a> Source Code</h3><p>dts 的配置：</p><div class="language-dts line-numbers-mode" data-ext="dts"><pre class="language-dts"><code>thermal-zones {
    cpu_thermal_zone {

        polling-delay-passive = &lt;1000&gt;; //超过阀值轮询时间
        polling-delay = &lt;2000&gt;; //未超阀值轮询时间
        thermal-sensors = &lt;&amp;ths_combine0 0&gt;;

        trips {
            cpu_trip0:t0 {
                temperature = &lt;70&gt;;
                type = &quot;passive&quot;;
                hysteresis = &lt;0&gt;;
            };
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码为拷贝过来的，具体的理解，目前如下：</p><ol><li>轮询时间有 2 个，如果超过了温度阈值，则缩短轮询的时间。</li><li>@todo</li></ol><h2 id="thermal-governal" tabindex="-1"><a class="header-anchor" href="#thermal-governal" aria-hidden="true">#</a> Thermal Governal</h2><p>Thermal Governal 是降温策略的一个抽象，与 cpufreq 的 governal 概念类似。</p><p>内核实现的策略定义如下：</p><p>(仅仅举例用，不是最新的代码实现，废弃)</p><div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">thermal_governor</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span> name<span class="token punctuation">[</span>THERMAL_NAME_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">/* 策略函数 */</span>
        <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>throttle<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz<span class="token punctuation">,</span> <span class="token keyword">int</span> trip<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">struct</span> <span class="token class-name">list_head</span> governor_list<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="thermal-cooling-device" tabindex="-1"><a class="header-anchor" href="#thermal-cooling-device" aria-hidden="true">#</a> Thermal Cooling Device</h2><p>Thermal Cooling Device 是可以降温设备的抽象，如风扇。除此之外，还会包括CPU、GPU 这些，如何理解呢？</p><p>散热的方式有两种，一种是加快散热，一种是降低产热量，CPU、GPU 就是后者的体现。</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> id<span class="token punctuation">;</span>
    <span class="token keyword">char</span> type<span class="token punctuation">[</span>THERMAL_NAME_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">device</span> device<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">device_node</span> <span class="token operator">*</span>np<span class="token punctuation">;</span>
    <span class="token keyword">void</span> <span class="token operator">*</span>devdata<span class="token punctuation">;</span>
    <span class="token comment">/* cooling device 操作函数 */</span>
    <span class="token keyword">const</span> <span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device_ops</span> <span class="token operator">*</span>ops<span class="token punctuation">;</span>
    bool updated<span class="token punctuation">;</span> <span class="token comment">/* true if the cooling device does not need update */</span>
    <span class="token keyword">struct</span> <span class="token class-name">mutex</span> lock<span class="token punctuation">;</span> <span class="token comment">/* protect thermal_instances list */</span>
    <span class="token keyword">struct</span> <span class="token class-name">list_head</span> thermal_instances<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">list_head</span> node<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device_ops</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_max_state<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>get_cur_state<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* 设定等级 */</span>
    <span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>set_cur_state<span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_cooling_device</span> <span class="token operator">*</span><span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">long</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="thermal-core" tabindex="-1"><a class="header-anchor" href="#thermal-core" aria-hidden="true">#</a> Thermal Core</h2><p>Thermal Core 作为中枢注册 Governor, 注册 Thermal 类，并且基于 Device Tree 注册 Thermal Zone;</p><p>除此之外，提供 Thermal Zone 注册函数、Cooling Device 注册函数、提供将 Cooling 设备绑定到 Zone 的函数，一个 Thermal Zone 可以有多个 Cooling 设备；</p><p>提供了核心函数 thermal_zone_device_update 作为 Thermal 中断处理函数和轮询函数，轮询的时候会根据不同 Trip Delay 调节。</p><h3 id="struct-thermal-governor" tabindex="-1"><a class="header-anchor" href="#struct-thermal-governor" aria-hidden="true">#</a> struct thermal_governor</h3><p>对于 <code>thermal_governor</code> 结构体组成如下：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">/**
 * struct thermal_governor - structure that holds thermal governor information
 * @name:	name of the governor
 * @bind_to_tz: callback called when binding to a thermal zone.  If it
 *		returns 0, the governor is bound to the thermal zone,
 *		otherwise it fails.
 * @unbind_from_tz:	callback called when a governor is unbound from a
 *			thermal zone.
 * @throttle:	callback called for every trip point even if temperature is
 *		below the trip point temperature
 * @governor_list:	node in thermal_governor_list (in thermal_core.c)
 */</span>
<span class="token keyword">struct</span> <span class="token class-name">thermal_governor</span> <span class="token punctuation">{</span>
	<span class="token keyword">char</span> name<span class="token punctuation">[</span>THERMAL_NAME_LENGTH<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>bind_to_tz<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>unbind_from_tz<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> <span class="token punctuation">(</span><span class="token operator">*</span>throttle<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">thermal_zone_device</span> <span class="token operator">*</span>tz<span class="token punctuation">,</span> <span class="token keyword">int</span> trip<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">struct</span> <span class="token class-name">list_head</span>	governor_list<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><code>name</code>: thermal governor 名称</p></li><li><p><code>bind_to_tz</code>: 回调函数，callback called when binding to a thermal zone. 如果返回 <code>0</code>, 则 governor 绑定到 thermal zone 成功，否则失败</p></li><li><p><code>unbind_from_tz</code>: 解绑回调函数</p></li><li><p><code>throttle</code>:<br> callback called for every trip point even if temperature is below the trip point temperature. 意思就是说，每个触发点的回调，即使是温度低于触发点温度，也会回调这个函数;<br> 在有些解释中，<code>throttle</code> 被认为是策略函数，其参数传入 <code>int (*thermal_governor::throttle)</code></p></li><li><p><code>governor_list</code>: governor 列表</p></li></ul><p><code>list_head</code> 结构体定义如下：</p><div class="language-c" data-ext="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">list_head</span> <span class="token punctuation">{</span>
	<span class="token keyword">struct</span> <span class="token class-name">list_head</span> <span class="token operator">*</span>next<span class="token punctuation">,</span> <span class="token operator">*</span>prev<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference" aria-hidden="true">#</a> Reference</h2><hr class="footnotes-sep">`,42),_={class:"footnotes"},b={class:"footnotes-list"},g={id:"footnote1",class:"footnote-item"},y={href:"https://www.it610.com/article/1288705954065489920.htm",target:"_blank",rel:"noopener noreferrer"},w=s("a",{href:"#footnote-ref1",class:"footnote-backref"},"↩︎",-1);function f(z,T){const t=e("Mermaid"),o=e("ExternalLinkIcon");return i(),l("div",null,[d,n(t,{id:"mermaid-12",code:"eJxLy8kvT85ILCpRCHHh4nSMjg7JSC3KTcxRcM4vSo2NBQop6OraKTghJKLy81IVXFLLMpOR5J0R8u75ZalFeflFCEkXZFPzcxCaAcCtJ4Y="}),u,n(t,{id:"mermaid-35",code:"eJyNUsFugzAMPbdf4XMl+ICq4rTjTvuBKEAUohEHJaHTuu3fZyeE0a2tdgBh+/k9P5tulCE8Gam9tHuA3njVReMQnl8oTFWIg/JWjuLiUIlenU2n4IOqANV1bZLEEo5wiJfpVj33Cjcxht6E+aLnkRCDk9judOKWplmIW4M9HMFgPCyZGTm3BFpFEZUtYwQOvUmSpWxdrzblTZiaCS3i+/Q3t7JWUNcPLeR9rOPTVtbxtTsrj84LlLZI4GxFbNcZCxW7KlS827aYqu/Lb3tW+TbL736oO+dGg7ocldg7+syYN2X0EBc8G7cyvOaQ2bltNNZEuuWMwWhUPYwONfA9CGRl7IZ0oJThMW/9SFX12dw7/L9bstPf8MX/FXyzmP03LKbxmA=="}),k,n(t,{id:"mermaid-49",code:"eJxLy8kvT85ILCpR8AniUgACR42SjNSi3MSc+Kr8vNT4lNSyzORUBU1dXTsnVJmCxKLE3GIFrZKqAk0uAGaQGGQ="}),m,n(t,{id:"mermaid-254",code:"eJxLy8kvT85ILCpR8AniUgACR42SjNSi3MSc+Kr8vNT4lNSyzORUBU1dXTsnDQUUqYLEosTcYgWtkqoCTbBWJ6AiZ7j2pMy8FISaJKAaAK4TI9g="}),v,n(t,{id:"mermaid-340",code:"eJxLy8kvT85ILCpR8AniUgACR42SjNSi3MSc+Kr8vNT4lNSyzORUBU1dXTsnbDLx+QXFClpAQpMLAM9lGfU="}),h,s("section",_,[s("ol",b,[s("li",g,[s("p",null,[s("a",y,[p("Linux电源管理（五）thermal"),n(o)]),p(),w])])])])])}const E=c(r,[["render",f],["__file","thermal.html.vue"]]);export{E as default};
