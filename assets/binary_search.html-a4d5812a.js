const n=JSON.parse('{"key":"v-5ab77a0c","path":"/algorithm/binary_search.html","title":"Binary Search","lang":"zh-CN","frontmatter":{"title":"Binary Search","date":"2019-09-12T00:00:00.000Z","tag":["algorithm","binary_search"],"category":["Algorithm"],"description":"Summary 1. 二分搜索模板 1.1 基本的二分搜索算法 手工实现 class Solution: def search(self, nums: List[int], target: int) -&gt; int: if not nums: return -1 l, r = 0, len(nums) - 1 while l &lt;= r: mid = l + (r - l) // 2 if nums[mid] &lt; target: l = mid + 1 elif nums[mid] &gt; target: r = mid - 1 else: return mid return -1 使用 Python bisect 库 def search_2(self, nums: List[int], target: int) -&gt; int: res = bisect.bisect_left(nums, target) if res != len(nums) and nums[res] == target: return res return -1","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/algorithm/binary_search.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"Binary Search"}],["meta",{"property":"og:description","content":"Summary 1. 二分搜索模板 1.1 基本的二分搜索算法 手工实现 class Solution: def search(self, nums: List[int], target: int) -&gt; int: if not nums: return -1 l, r = 0, len(nums) - 1 while l &lt;= r: mid = l + (r - l) // 2 if nums[mid] &lt; target: l = mid + 1 elif nums[mid] &gt; target: r = mid - 1 else: return mid return -1 使用 Python bisect 库 def search_2(self, nums: List[int], target: int) -&gt; int: res = bisect.bisect_left(nums, target) if res != len(nums) and nums[res] == target: return res return -1"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vueblog.weigao.cc/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Binary Search"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:tag","content":"binary_search"}],["meta",{"property":"article:published_time","content":"2019-09-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Binary Search\\",\\"image\\":[\\"https://vueblog.weigao.cc/\\"],\\"datePublished\\":\\"2019-09-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[{"level":3,"title":"1. 二分搜索模板","slug":"_1-二分搜索模板","link":"#_1-二分搜索模板","children":[]},{"level":3,"title":"1.1 基本的二分搜索算法","slug":"_1-1-基本的二分搜索算法","link":"#_1-1-基本的二分搜索算法","children":[]},{"level":3,"title":"1.2 寻找左侧边界的二分搜索","slug":"_1-2-寻找左侧边界的二分搜索","link":"#_1-2-寻找左侧边界的二分搜索","children":[]},{"level":3,"title":"1.3 寻找右侧边界的二分搜索","slug":"_1-3-寻找右侧边界的二分搜索","link":"#_1-3-寻找右侧边界的二分搜索","children":[]},{"level":3,"title":"1.3 参考","slug":"_1-3-参考","link":"#_1-3-参考","children":[]}]},{"level":2,"title":"二分查找思路整理","slug":"二分查找思路整理","link":"#二分查找思路整理","children":[]},{"level":2,"title":"Code","slug":"code","link":"#code","children":[{"level":3,"title":"wiki 伪代码","slug":"wiki-伪代码","link":"#wiki-伪代码","children":[]},{"level":3,"title":"查找插入位置","slug":"查找插入位置","link":"#查找插入位置","children":[]},{"level":3,"title":"bisect","slug":"bisect","link":"#bisect","children":[]},{"level":3,"title":"向上、下取整","slug":"向上、下取整","link":"#向上、下取整","children":[]}]},{"level":2,"title":"Problems","slug":"problems","link":"#problems","children":[{"level":3,"title":"查找二维数组中是否存在某个元素","slug":"查找二维数组中是否存在某个元素","link":"#查找二维数组中是否存在某个元素","children":[]},{"level":3,"title":"完全平方数","slug":"完全平方数","link":"#完全平方数","children":[]},{"level":3,"title":"数字在排序数组中出现的次数","slug":"数字在排序数组中出现的次数","link":"#数字在排序数组中出现的次数","children":[]},{"level":3,"title":"Find Peak Element - 寻找峰值","slug":"find-peak-element-寻找峰值","link":"#find-peak-element-寻找峰值","children":[]},{"level":3,"title":"LC875 爱吃香蕉的珂珂","slug":"lc875-爱吃香蕉的珂珂","link":"#lc875-爱吃香蕉的珂珂","children":[]},{"level":3,"title":"求根号 x 的值","slug":"求根号-x-的值","link":"#求根号-x-的值","children":[]},{"level":3,"title":"LC719 找出第 K 小的数对距离","slug":"lc719-找出第-k-小的数对距离","link":"#lc719-找出第-k-小的数对距离","children":[]}]},{"level":2,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}],"git":{},"readingTime":{"minutes":9.3,"words":2791},"filePathRelative":"algorithm/binary_search.md","localizedDate":"2019年9月12日","excerpt":"<h2> Summary</h2>\\n<h3> 1. 二分搜索模板</h3>\\n<h3> 1.1 基本的二分搜索算法</h3>\\n<ol>\\n<li>\\n<p>手工实现</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Solution</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">search</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> nums<span class=\\"token punctuation\\">:</span> List<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> target<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token keyword\\">not</span> nums<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n        l<span class=\\"token punctuation\\">,</span> r <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\n        <span class=\\"token keyword\\">while</span> l <span class=\\"token operator\\">&lt;=</span> r<span class=\\"token punctuation\\">:</span>\\n            mid <span class=\\"token operator\\">=</span> l <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span>r <span class=\\"token operator\\">-</span> l<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">//</span> <span class=\\"token number\\">2</span>\\n            <span class=\\"token keyword\\">if</span> nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> target<span class=\\"token punctuation\\">:</span>\\n                l <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n            <span class=\\"token keyword\\">elif</span> nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> target<span class=\\"token punctuation\\">:</span>\\n                r <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\n            <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                <span class=\\"token keyword\\">return</span> mid\\n\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>使用 Python <code>bisect</code> 库</p>\\n<div class=\\"language-python\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code>    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">search_2</span><span class=\\"token punctuation\\">(</span>self<span class=\\"token punctuation\\">,</span> nums<span class=\\"token punctuation\\">:</span> List<span class=\\"token punctuation\\">[</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> target<span class=\\"token punctuation\\">:</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span><span class=\\"token operator\\">&gt;</span> <span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">:</span>\\n        res <span class=\\"token operator\\">=</span> bisect<span class=\\"token punctuation\\">.</span>bisect_left<span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">,</span> target<span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> res <span class=\\"token operator\\">!=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">and</span> nums<span class=\\"token punctuation\\">[</span>res<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> target<span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">return</span> res\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n</code></pre></div></li>\\n</ol>","autoDesc":true}');export{n as data};
