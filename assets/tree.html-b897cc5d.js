const e=JSON.parse('{"key":"v-04547e7d","path":"/algorithm/data_struct/tree.html","title":"Tree","lang":"zh-CN","frontmatter":{"title":"Tree","date":"2022-02-07T00:00:00.000Z","description":"Preorder Traversal 多叉树的前序遍历 多叉树的前序遍历，给定多叉树，用数组表示：root = [1,null,3,2,4,null,5,6], 每个层级之间用 null 进行隔离，根据这个输出这棵树的前序遍历结果。 题目中提到了，递归的方法比较简单，希望我们用迭代的方法进行求解。 题目链接如下：LC589 N 叉树的前序遍历","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/algorithm/data_struct/tree.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"Tree"}],["meta",{"property":"og:description","content":"Preorder Traversal 多叉树的前序遍历 多叉树的前序遍历，给定多叉树，用数组表示：root = [1,null,3,2,4,null,5,6], 每个层级之间用 null 进行隔离，根据这个输出这棵树的前序遍历结果。 题目中提到了，递归的方法比较简单，希望我们用迭代的方法进行求解。 题目链接如下：LC589 N 叉树的前序遍历"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:published_time","content":"2022-02-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Tree\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Preorder Traversal","slug":"preorder-traversal","link":"#preorder-traversal","children":[{"level":3,"title":"多叉树的前序遍历","slug":"多叉树的前序遍历","link":"#多叉树的前序遍历","children":[]},{"level":3,"title":"二叉树的前序遍历","slug":"二叉树的前序遍历","link":"#二叉树的前序遍历","children":[]}]},{"level":2,"title":"Level Order Traversal","slug":"level-order-traversal","link":"#level-order-traversal","children":[{"level":3,"title":"二叉树的层次遍历","slug":"二叉树的层次遍历","link":"#二叉树的层次遍历","children":[]}]},{"level":2,"title":"Inorder Traversal","slug":"inorder-traversal","link":"#inorder-traversal","children":[]},{"level":2,"title":"Trie 前缀树","slug":"trie-前缀树","link":"#trie-前缀树","children":[]},{"level":2,"title":"BST","slug":"bst","link":"#bst","children":[{"level":3,"title":"BST 中序遍历","slug":"bst-中序遍历","link":"#bst-中序遍历","children":[]},{"level":3,"title":"删除二叉搜索树中的节点","slug":"删除二叉搜索树中的节点","link":"#删除二叉搜索树中的节点","children":[]}]}],"git":{},"readingTime":{"minutes":6.01,"words":1802},"filePathRelative":"algorithm/data_struct/tree.md","localizedDate":"2022年2月7日","excerpt":"<h2> Preorder Traversal</h2>\\n<h3> 多叉树的前序遍历</h3>\\n<p>多叉树的前序遍历，给定多叉树，用数组表示：<code>root = [1,null,3,2,4,null,5,6]</code>, 每个层级之间用 <code>null</code> 进行隔离，根据这个输出这棵树的前序遍历结果。</p>\\n<p>题目中提到了，<strong>递归</strong>的方法比较简单，希望我们用<strong>迭代</strong>的方法进行求解。</p>\\n<p>题目链接如下：<a href=\\"https://leetcode-cn.com/problems/n-ary-tree-preorder-traversal/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LC589 N 叉树的前序遍历</a></p>","autoDesc":true}');export{e as data};
