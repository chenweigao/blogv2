import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as i,c,a as s,b as n,d as e,f as t}from"./app-22cda79c.js";const r={},p=s("h1",{id:"vps-and-shadowsocks",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#vps-and-shadowsocks","aria-hidden":"true"},"#"),n(" VPS and Shadowsocks")],-1),u=s("h2",{id:"_1-配置shadowsocks客户端",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-配置shadowsocks客户端","aria-hidden":"true"},"#"),n(" 1. 配置shadowsocks客户端")],-1),d={href:"https://github.com/shadowsocks/shadowsocks/tree/master",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token parameter variable">-y</span> <span class="token function">install</span> epel-release
yum <span class="token parameter variable">-y</span> <span class="token function">install</span> python-pip
pip <span class="token function">install</span> shadowsocks

<span class="token comment">#查看系统 </span>
<span class="token function">cat</span> /etc/redhat-release
<span class="token comment">#查看内核</span>
<span class="token function">cat</span>  /proc/version
<span class="token function">uname</span> <span class="token parameter variable">-r</span>
<span class="token function">vi</span> /etc/shadowsocks.json
<span class="token punctuation">{</span>
    <span class="token string">&quot;server&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;0.0.0.0&quot;</span>,
    <span class="token string">&quot;server_port&quot;</span>:8388,
    <span class="token string">&quot;local_port&quot;</span>:1080,
    <span class="token string">&quot;password&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;chen852gao&quot;</span>,
    <span class="token string">&quot;timeout&quot;</span>:600,
    <span class="token string">&quot;method&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;aes-256-cfb&quot;</span>
<span class="token punctuation">}</span>
<span class="token comment">#启动ss服务</span>
ssserver <span class="token parameter variable">-c</span> /etc/shadowsocks.json <span class="token parameter variable">-d</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-配置91云一键加速工具" tabindex="-1"><a class="header-anchor" href="#_2-配置91云一键加速工具" aria-hidden="true">#</a> 2. 配置91云一键加速工具</h2>`,2),k={href:"https://www.91yun.co/serverspeeder91yun",title:"91云",target:"_blank",rel:"noopener noreferrer"},m=t(`<p>chrome上的插件Proxy SwitchyOmega使用方法为：</p><ul><li><p>从GitHub下载该插件，进入到google chrome的插件中心</p></li><li><p>配置Proxy</p><ul><li>protocol : SOCKS5</li><li>server: 127.0.0.1</li><li>Port: 1080</li></ul></li><li><p>配置Auto Switch</p><ul><li><p>Rule List rule 的Profile 填 proxy</p></li><li><p>Default 的Profile 填[Direct]</p></li><li><p>Rule List Format选择Autoproxy</p></li><li><p>Rule List URL填写：</p><div class="language-html" data-ext="html"><pre class="language-html"><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt
</code></pre></div></li><li><p>保存apply changes即可</p></li></ul></li></ul><h2 id="_3-kcptun-加速工具" tabindex="-1"><a class="header-anchor" href="#_3-kcptun-加速工具" aria-hidden="true">#</a> 3. kcptun 加速工具</h2>`,3),v=s("p",null,"安装并配置服务端",-1),b={href:"https://github.com/kuoruan/shell-scripts",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查找shadowsocks端口，将8388替换为ss端口</span>
<span class="token function">netstat</span> <span class="token parameter variable">-nl</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">8388</span>
ss <span class="token parameter variable">-nl</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">8388</span>
</code></pre></div>`,1),g={href:"https://blog.kuoruan.com/110.html",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#使用脚本一键安装</span>
<span class="token function">wget</span> --no-check-certificate https://github.com/kuoruan/shell-scripts/raw/master/kcptun/kcptun.sh
<span class="token function">chmod</span> +x ./kcptun.sh
./kcptun.sh
</code></pre></div><p>进入配置界面，按照步骤进行，需要注意到 <em>需要加速的端口</em> 为shadowsocks的端口，本例中为8388</p>`,2),w=s("p",null,"安装客户端",-1),x={href:"https://github.com/dfdragon/kcptun_gclient/releases",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/dfdragon/kcptun_gclient/releases",target:"_blank",rel:"noopener noreferrer"},y=t(`<li><p>配置客户端</p><ul><li>本地侦听端口：任意</li><li>KCP服务器地址：VPS的IP</li><li>端口：默认的29900</li><li>其他都和服务端的配置一致</li></ul></li><li><p>配置shadowsocks客户端</p><ul><li>服务器地址：127.0.0.1</li><li>服务器端口：本地侦听端口</li><li>密码和加密方式：VPS的密码和加密方式</li></ul><p>配置完以上步骤以后，启动ss客户端和KCPTun客户端配置管理工具，日志区产生记录，即成功</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看服务器日志</span>
./kcptun.sh
</code></pre></div></li>`,2);function P(S,K){const a=o("ExternalLinkIcon");return i(),c("div",null,[p,u,s("p",null,[s("a",d,[n("GitHub of shadowsocks"),e(a)])]),h,s("p",null,[n("在"),s("a",k,[n("91云"),e(a)]),n(" 上面下载加速工具")]),m,s("ul",null,[s("li",null,[v,s("p",null,[s("a",b,[n("kcptun GitHub"),e(a)])]),_,s("p",null,[n("参考"),s("a",g,[n("教程"),e(a)])]),f]),s("li",null,[w,s("p",null,[n("首先下载一个启动Kcptun的工具，注意到这只是用来启动 Kcptun 的工具，而不是 Kcptun 客户端。"),s("a",x,[n("启动工具下载地址"),e(a)])]),s("p",null,[n("注意要下载服务端对应的Keptun，"),s("a",q,[n("客户端下载地址"),e(a)])])]),y])])}const C=l(r,[["render",P],["__file","vps.html.vue"]]);export{C as default};
