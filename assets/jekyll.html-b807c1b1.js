import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o as i,c,a,b as s,d as e,f as t}from"./app-22cda79c.js";const p={},r=a("p",null,[s("Do you want to build your own site from scratch or generate one for your project? This guide could help you with "),a("strong",null,"Jekyll"),s(" and "),a("strong",null,"GitHub Pages"),s(".")],-1),u=a("h2",{id:"github-pages",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#github-pages","aria-hidden":"true"},"#"),s(" GitHub Pages")],-1),d=a("p",null,"Before we start build our Jekyll site, we should do as follows in GitHub:",-1),h=a("strong",null,"empty",-1),g=a("strong",null,"name",-1),m=a("em",null,"username",-1),k={href:"http://chenweigao.github.io",target:"_blank",rel:"noopener noreferrer"},b=a("li",null,[s("In your home folder, clone this repository, using "),a("code",null,"git clone")],-1),y=a("strong",null,"Git",-1),f={href:"https://chenweigao.github.io/2018/01/12/git.html",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><p>Take Ubuntu system as an example:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Install</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ruby jekyll
</code></pre></div>`,3),_={href:"https://jekyllrb.com/docs/installation/#ubuntu",target:"_blank",rel:"noopener noreferrer"},w=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> ruby ruby-dev build-essential
<span class="token builtin class-name">echo</span> <span class="token string">&#39;# Install Ruby Gems to ~/gems&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export GEM_HOME=$HOME/gems&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=$HOME/gems/bin:$PATH&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc
<span class="token builtin class-name">source</span> ~/.bashrc
gem <span class="token function">install</span> jekyll bundler
</code></pre></div><p>change the gem source:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>gem sources <span class="token parameter variable">--add</span> https://gems.ruby-china.org/ <span class="token parameter variable">--remove</span> https://rubygems.org/
</code></pre></div><h2 id="build-site" tabindex="-1"><a class="header-anchor" href="#build-site" aria-hidden="true">#</a> Build Site</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># After you install jekyll</span>
jekyll new ~/username.github.io/
</code></pre></div><p>After you do this, you will see a directory <code>blog</code>, then:</p><div class="language-text" data-ext="text"><pre class="language-text"><code>cd username.github.io
jekyll server
</code></pre></div><p>Then your site could be seen at: <code>http://localhost:4000</code>, open your browser and type it, you&#39;ll see your new site.</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># build site in local</span>
bundle <span class="token builtin class-name">exec</span> jekyll build
bundle <span class="token builtin class-name">exec</span> jekyll server <span class="token parameter variable">--incremental</span>
</code></pre></div><h2 id="blog-directory-structure" tabindex="-1"><a class="header-anchor" href="#blog-directory-structure" aria-hidden="true">#</a> Blog Directory Structure</h2><p>If you <code>ls</code> in your <em>blog</em> directory, you will see many files, an overview of what will be used for you does:</p><p><strong>_config.yml</strong>: your configuration data</p><p>In this file, you could do many things to your site, this is my _confg.yml file, you can edit as soon as you like.</p><div class="language-ruby" data-ext="rb"><pre class="language-ruby"><code><span class="token comment">#_config.yml</span>
<span class="token symbol">title</span><span class="token operator">:</span> Nerche Note
<span class="token symbol">email</span><span class="token operator">:</span> weigao1024<span class="token variable">@foxmail</span><span class="token punctuation">.</span>com
<span class="token symbol">description</span><span class="token operator">:</span> <span class="token operator">&gt;</span> <span class="token comment"># this means to ignore newlines until &quot;baseurl:&quot;</span>
  Welcome to my profile pages<span class="token operator">!</span>
<span class="token symbol">baseurl</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span> <span class="token comment"># the subpath of your site, e.g. /blog</span>
<span class="token symbol">url</span><span class="token operator">:</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span> <span class="token comment"># the base hostname &amp; protocol for your site</span>
<span class="token symbol">github_username</span><span class="token operator">:</span>  chenweigao
</code></pre></div><p><strong>_posts</strong>: this is where your article stored, when you want to publish a new blog, to <strong>CREATE</strong> a new file here, the naming convention of these files is important, and must follow the format:<code>YEAR-MONTH-DAY-title.md</code>, such as: <code>2018-02-02-myblog.md</code>, please remember this, it is very <strong>important</strong>.</p><h2 id="add-post" tabindex="-1"><a class="header-anchor" href="#add-post" aria-hidden="true">#</a> Add Post</h2><p>We create a new markdown file named <code>2018-02-02-test.md</code>:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>---
layout: article
title:  &quot;This is a test blog&quot;
tag:
  - blog
modify_date: 2017-01-01
---
## You will see me at [https://localhost:4000](https://localhost:4000)
The head is **required** in every post
which tells the system your post&#39;s title, layout, time and so on...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you need to open your <code>terminal</code>, and type:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>jekyll build
jekyll server
</code></pre></div><p>Then you open your browser, and type <code>https://localhost:4000</code> ,you will find the blog&#39;s update.</p><h2 id="publish-blog" tabindex="-1"><a class="header-anchor" href="#publish-blog" aria-hidden="true">#</a> Publish Blog</h2><p>Now it is time to publish your blog in GitHub Pages, you need to:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
<span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;my frist blog&quot;</span>
<span class="token function">git</span> push
</code></pre></div><p>Then you can see your blog at <em>username</em>.github.io, such as <a href="chenweigao.github.io">chenweigao.github.io</a></p><h2 id="highlight-code" tabindex="-1"><a class="header-anchor" href="#highlight-code" aria-hidden="true">#</a> Highlight Code</h2><p>Sometimes, especially for a coder, you may want to highlight your code:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>{% raw %}
{% highlight c linonos %}

int mian(){
  printf(&quot;Hello Jekyll!\\n&quot;);
  return 0;
}

{% endhighlight %}
{% endraw %}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>raw</code> and <code>endraw</code> make the code not parsed by Jekyll.</p></div><h2 id="including-images-and-resources" tabindex="-1"><a class="header-anchor" href="#including-images-and-resources" aria-hidden="true">#</a> Including Images and resources</h2><p>Chance are, at some points, you&#39;ll want to include images, downloads, or other digital assets along with your text content. There are a number of ways to include digital assets in Jekyll, one common solution is to create a folder in the root of the project directory call something like <code>assets</code>, into which any images, files or other resources are placed.</p><p>Including an image assets in a post:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">!</span><span class="token punctuation">[</span>My helpful screenshot<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span> site.url <span class="token punctuation">}</span><span class="token punctuation">}</span>/assets/screenshot.jpg<span class="token punctuation">)</span>
</code></pre></div><p>or:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token operator">!</span><span class="token punctuation">[</span>My helpful screenshot<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token string">&quot;/assets/screenshot.jpg&quot;</span> <span class="token operator">|</span> absolute_url <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>linking to a PDF for readers to download:</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>get the PDF<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">{</span> site.url <span class="token punctuation">}</span><span class="token punctuation">}</span>/assets/mydoc.pdf<span class="token punctuation">)</span>
</code></pre></div>`,37),x={href:"https://jekyllrb.com/docs/posts/",target:"_blank",rel:"noopener noreferrer"},j=a("h2",{id:"add-https",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#add-https","aria-hidden":"true"},"#"),s(" Add HTTPS")],-1),q={href:"https://zhuanlan.zhihu.com/p/22667528",target:"_blank",rel:"noopener noreferrer"},T={href:"https://www.cloudflare.com/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://app.netlify.com/",target:"_blank",rel:"noopener noreferrer"},I=a("em",null,[a("strong",null,"highly recommend")],-1),P=a("h2",{id:"highlight-js",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#highlight-js","aria-hidden":"true"},"#"),s(" highlight.js")],-1),E={href:"https://highlightjs.org/",target:"_blank",rel:"noopener noreferrer"},A=a("code",null,".css",-1),G=a("code",null,"header.html",-1),N=t(`<div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ site.url }}/assets/css/default.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{{ site.url }}/assets/css/highlight.pack.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">hljs<span class="token punctuation">.</span><span class="token function">initHighlightingOnLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,1);function B(M,C){const n=l("ExternalLinkIcon");return i(),c("div",null,[r,u,d,a("ul",null,[a("li",null,[s("Create a new "),h,s(" repository, "),g,s(" is "),m,s(".github.io; For example, my repository named "),a("a",k,[s("chenweigao.github.io"),e(n)]),s(".")]),b,a("li",null,[s("If you have any questions about "),y,s(" ,see my another post "),a("a",f,[s("Git - To Use Git More Easily: Config, Branch and Rebase"),e(n)])])]),v,a("p",null,[s("or this "),a("a",_,[s("guide"),e(n)]),s(":")]),w,a("p",null,[s("see at the official guide,"),a("a",x,[s("Writing Post"),e(n)]),s(".")]),j,a("p",null,[s("When you want to add HTTPS, it is really a big work, see "),a("a",q,[s("this guide"),e(n)]),s(", that is helpful. The tool we use is "),a("a",T,[s("cloudflare"),e(n)]),s(".")]),a("p",null,[s("There is an auto tool can help you add https, "),a("a",H,[s("Netlify"),e(n)]),s(", which helps you set your site here, and make it faster, more importantly, it is free, "),I,s(".")]),P,a("p",null,[s("using "),a("a",E,[s("highlight.js"),e(n)]),s(", downloads the package and select a "),A,s(", then in "),G,s(":")]),N])}const J=o(p,[["render",B],["__file","jekyll.html.vue"]]);export{J as default};
