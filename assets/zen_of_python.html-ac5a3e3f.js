import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as p,c as o,e as a,a as e,b as n,f as s}from"./app-22cda79c.js";const i={},r=e("p",null,[e("em",null,"Zon of Python"),n(" By Tim Peters")],-1),l=e("p",null,"translated by weigao chen",-1),h=s("<p>Beautiful is better than ugly.</p><p>Explicit is better than implicit.</p><p>于美于显，勿陋勿隐。</p><p>Simple is better than complex.</p><p>Complex is better than complicated.</p><p>何彼繁矣，大道至简。</p><p>何彼涩矣，涩以从繁。</p><p>（吾心繁繁，愠于从涩）</p><p>Flat is better than nested.</p><p>Sparse is better than dense.</p><p>平兮稀兮，实获我心。</p><p>嵌兮密兮，心之忧矣。</p><p>Readability counts.</p><p>读之妙哉，日就月将。</p><p>Special cases aren&#39;t special enough to break the rules.</p><p>殊从于规，不可破也。</p><p>所可破也，行之厉也。</p><p>Although practicality beats purity.</p><p>Errors should never pass silently.</p><p>Unless explicitly silenced.</p><p>岂不思异，过莫避之。</p><p>In the face of ambiguity, refuse the temptation to guess.</p><p>There should be one-- and preferably only one --obvious way to do it.</p><p>远歧近理，闻于苍穹。</p><p>Although that way may not be obvious at first unless you&#39;re Dutch.</p><p>Now is better than never.</p><p>Although never is often better than <em>right</em> now.</p><p>其艰不易，何不躬行？</p><p>夙夜解之，既明且哲。</p><p>If the implementation is hard to explain, it&#39;s a bad idea.</p><p>If the implementation is easy to explain, it may be a good idea.</p><p>解之即成，于简于繁？</p><p>简兮简兮，以永终誉。</p><p>繁兮繁兮，于乎哀哉！</p><p>Namespaces are one honking great idea -- let&#39;s do more of those!</p><p>命名空间，于嗟益兮！</p>",36);function c(m,d){return p(),o("div",null,[r,l,a(" more "),h])}const _=t(i,[["render",c],["__file","zen_of_python.html.vue"]]);export{_ as default};
