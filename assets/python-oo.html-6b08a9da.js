const n=JSON.parse('{"key":"v-523b2742","path":"/python/python-oo.html","title":"OO & Class","lang":"zh-CN","frontmatter":{"title":"OO & Class","date":"2021-09-05T00:00:00.000Z","description":"Class 作用域和命名空间 首先来看一个例子，参考文献 P1.1: def scope_test(): def do_local(): spam = \\"local spam\\" def do_nonlocal(): nonlocal spam spam = \\"nonlocal spam\\" def do_global(): global spam spam = \\"global spam\\" spam = \\"test spam\\" do_local() print(\\"After local assignment:\\", spam) # After local assignment: test spam do_nonlocal() print(\\"After nonlocal assignment:\\", spam) # After nonlocal assignment: nonlocal spam do_global() print(\\"After global assignment:\\", spam) # After global assignment: nonlocal spam # 这时候还未修改是因为还在执行 scope_test 内部 scope_test() print(\\"In global scope:\\", spam) # In global scope: global spam","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/python/python-oo.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"OO & Class"}],["meta",{"property":"og:description","content":"Class 作用域和命名空间 首先来看一个例子，参考文献 P1.1: def scope_test(): def do_local(): spam = \\"local spam\\" def do_nonlocal(): nonlocal spam spam = \\"nonlocal spam\\" def do_global(): global spam spam = \\"global spam\\" spam = \\"test spam\\" do_local() print(\\"After local assignment:\\", spam) # After local assignment: test spam do_nonlocal() print(\\"After nonlocal assignment:\\", spam) # After nonlocal assignment: nonlocal spam do_global() print(\\"After global assignment:\\", spam) # After global assignment: nonlocal spam # 这时候还未修改是因为还在执行 scope_test 内部 scope_test() print(\\"In global scope:\\", spam) # In global scope: global spam"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:published_time","content":"2021-09-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OO & Class\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-09-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Class","slug":"class","link":"#class","children":[{"level":3,"title":"作用域和命名空间","slug":"作用域和命名空间","link":"#作用域和命名空间","children":[]},{"level":3,"title":"self","slug":"self","link":"#self","children":[]},{"level":3,"title":"给类添加迭代器","slug":"给类添加迭代器","link":"#给类添加迭代器","children":[]},{"level":3,"title":"类方法 classmethod","slug":"类方法-classmethod","link":"#类方法-classmethod","children":[]},{"level":3,"title":"静态方法 staticmethod","slug":"静态方法-staticmethod","link":"#静态方法-staticmethod","children":[]}]},{"level":2,"title":"3. 继承与多态","slug":"_3-继承与多态","link":"#_3-继承与多态","children":[{"level":3,"title":"函数继承","slug":"函数继承","link":"#函数继承","children":[]},{"level":3,"title":"QA","slug":"qa","link":"#qa","children":[]},{"level":3,"title":"继承易错知识点","slug":"继承易错知识点","link":"#继承易错知识点","children":[]},{"level":3,"title":"super()","slug":"super","link":"#super","children":[]}]},{"level":2,"title":"4. 魔法方法 magic method","slug":"_4-魔法方法-magic-method","link":"#_4-魔法方法-magic-method","children":[]},{"level":2,"title":"5 __new__","slug":"_5-new","link":"#_5-new","children":[{"level":3,"title":"QA","slug":"qa-1","link":"#qa-1","children":[]},{"level":3,"title":"5.1 __new__","slug":"_5-1-new","link":"#_5-1-new","children":[]},{"level":3,"title":"5.2 实例化的本质 new 与 init","slug":"_5-2-实例化的本质-new-与-init","link":"#_5-2-实例化的本质-new-与-init","children":[]},{"level":3,"title":"5.3 __new__ 返回其他实例","slug":"_5-3-new-返回其他实例","link":"#_5-3-new-返回其他实例","children":[]}]},{"level":2,"title":"6. __str__","slug":"_6-str","link":"#_6-str","children":[]},{"level":2,"title":"7. __call__","slug":"_7-call","link":"#_7-call","children":[]},{"level":2,"title":"8. __slot__","slug":"_8-slot","link":"#_8-slot","children":[]},{"level":2,"title":"9. 元类 metaclass","slug":"_9-元类-metaclass","link":"#_9-元类-metaclass","children":[{"level":3,"title":"9.1 什么是元类","slug":"_9-1-什么是元类","link":"#_9-1-什么是元类","children":[]}]},{"level":2,"title":"P. 参考文献","slug":"p-参考文献","link":"#p-参考文献","children":[]}],"git":{},"readingTime":{"minutes":13.78,"words":4133},"filePathRelative":"python/python-oo.md","localizedDate":"2021年9月5日","excerpt":"<h2> Class</h2>\\n<h3> 作用域和命名空间</h3>\\n<p>首先来看一个例子，参考文献 P1.1:</p>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">scope_test</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">do_local</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        spam <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"local spam\\"</span>\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">do_nonlocal</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">nonlocal</span> spam\\n        spam <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"nonlocal spam\\"</span>\\n\\n    <span class=\\"token keyword\\">def</span> <span class=\\"token function\\">do_global</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">global</span> spam\\n        spam <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"global spam\\"</span>\\n\\n    spam <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"test spam\\"</span>\\n    do_local<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"After local assignment:\\"</span><span class=\\"token punctuation\\">,</span> spam<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\"># After local assignment: test spam</span>\\n    do_nonlocal<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"After nonlocal assignment:\\"</span><span class=\\"token punctuation\\">,</span> spam<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\"># After nonlocal assignment: nonlocal spam</span>\\n    do_global<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"After global assignment:\\"</span><span class=\\"token punctuation\\">,</span> spam<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\"># After global assignment: nonlocal spam</span>\\n    <span class=\\"token comment\\"># 这时候还未修改是因为还在执行 scope_test 内部</span>\\n\\nscope_test<span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"In global scope:\\"</span><span class=\\"token punctuation\\">,</span> spam<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\"># In global scope: global spam</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
