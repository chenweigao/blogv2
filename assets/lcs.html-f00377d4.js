const n=JSON.parse(`{"key":"v-f567ae54","path":"/algorithm/lcs.html","title":"LCS","lang":"zh-CN","frontmatter":{"title":"LCS","date":"2019-09-04T00:00:00.000Z","tag":["algorithm","leetcode","lcs"],"category":["Algorithm"],"description":"Summary LCS 问题有很多的子问题，大致包括以下： 最长公共子串，要求子串在原字符串中是连续的 最长公共子序列 最大子序列 最长递增子序列 最长公共子串 暴力求解 def LCSubStr(str1, str2, m, n): LCSuff = [[0 for i in range(n + 1)] for j in range(m + 1)] # 最长公共子串的长度 result = 0 # str1 中的最后相同的位置 p = 0 for i in range(m + 1): for j in range(n + 1): if(i == 0 or j == 0): LCSuff[i][j] = 0 elif(str1[i - 1] == str2[j - 1]): LCSuff[i][j] = LCSuff[i-1][j-1] + 1 result = max(result, LCSuff[i][j]) p = i else: LCSuff[i][j] = 0 return str1[p - result:p], result X = 'OldSite:GeeksforGeeks.org' Y = 'NewSite:GeeksQuiz.com' m = len(X) n = len(Y) print('Length of Longest Common Substring is', LCSubStr(X, Y, m, n))","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/algorithm/lcs.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"LCS"}],["meta",{"property":"og:description","content":"Summary LCS 问题有很多的子问题，大致包括以下： 最长公共子串，要求子串在原字符串中是连续的 最长公共子序列 最大子序列 最长递增子序列 最长公共子串 暴力求解 def LCSubStr(str1, str2, m, n): LCSuff = [[0 for i in range(n + 1)] for j in range(m + 1)] # 最长公共子串的长度 result = 0 # str1 中的最后相同的位置 p = 0 for i in range(m + 1): for j in range(n + 1): if(i == 0 or j == 0): LCSuff[i][j] = 0 elif(str1[i - 1] == str2[j - 1]): LCSuff[i][j] = LCSuff[i-1][j-1] + 1 result = max(result, LCSuff[i][j]) p = i else: LCSuff[i][j] = 0 return str1[p - result:p], result X = 'OldSite:GeeksforGeeks.org' Y = 'NewSite:GeeksQuiz.com' m = len(X) n = len(Y) print('Length of Longest Common Substring is', LCSubStr(X, Y, m, n))"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:tag","content":"algorithm"}],["meta",{"property":"article:tag","content":"leetcode"}],["meta",{"property":"article:tag","content":"lcs"}],["meta",{"property":"article:published_time","content":"2019-09-04T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LCS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-09-04T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Summary","slug":"summary","link":"#summary","children":[]},{"level":2,"title":"最长公共子串","slug":"最长公共子串","link":"#最长公共子串","children":[{"level":3,"title":"暴力求解","slug":"暴力求解","link":"#暴力求解","children":[]}]}],"git":{},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"algorithm/lcs.md","localizedDate":"2019年9月4日","excerpt":"<h2> Summary</h2>\\n<p>LCS 问题有很多的子问题，大致包括以下：</p>\\n<ul>\\n<li>\\n<p>最长公共子串，要求子串在原字符串中是<strong>连续</strong>的</p>\\n</li>\\n<li>\\n<p>最长公共子序列</p>\\n</li>\\n<li>\\n<p>最大子序列</p>\\n</li>\\n<li>\\n<p>最长递增子序列</p>\\n</li>\\n</ul>\\n<h2> 最长公共子串</h2>\\n<h3> 暴力求解</h3>\\n<div class=\\"language-python line-numbers-mode\\" data-ext=\\"py\\"><pre class=\\"language-python\\"><code><span class=\\"token keyword\\">def</span> <span class=\\"token function\\">LCSubStr</span><span class=\\"token punctuation\\">(</span>str1<span class=\\"token punctuation\\">,</span> str2<span class=\\"token punctuation\\">,</span> m<span class=\\"token punctuation\\">,</span> n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n    LCSuff <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span> <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>n <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span> <span class=\\"token keyword\\">for</span> j <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>m <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n\\n    <span class=\\"token comment\\"># 最长公共子串的长度</span>\\n    result <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n\\n    <span class=\\"token comment\\"># str1 中的最后相同的位置</span>\\n    p <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n\\n    <span class=\\"token keyword\\">for</span> i <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>m <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n        <span class=\\"token keyword\\">for</span> j <span class=\\"token keyword\\">in</span> <span class=\\"token builtin\\">range</span><span class=\\"token punctuation\\">(</span>n <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n            <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span> <span class=\\"token keyword\\">or</span> j <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n                LCSuff<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n            <span class=\\"token keyword\\">elif</span><span class=\\"token punctuation\\">(</span>str1<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> str2<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">:</span>\\n                LCSuff<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> LCSuff<span class=\\"token punctuation\\">[</span>i<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n                result <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">max</span><span class=\\"token punctuation\\">(</span>result<span class=\\"token punctuation\\">,</span> LCSuff<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n                p <span class=\\"token operator\\">=</span> i\\n            <span class=\\"token keyword\\">else</span><span class=\\"token punctuation\\">:</span>\\n                LCSuff<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span>\\n\\n    <span class=\\"token keyword\\">return</span> str1<span class=\\"token punctuation\\">[</span>p <span class=\\"token operator\\">-</span> result<span class=\\"token punctuation\\">:</span>p<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> result\\n\\n\\nX <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'OldSite:GeeksforGeeks.org'</span>\\nY <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'NewSite:GeeksQuiz.com'</span>\\n\\nm <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>X<span class=\\"token punctuation\\">)</span>\\nn <span class=\\"token operator\\">=</span> <span class=\\"token builtin\\">len</span><span class=\\"token punctuation\\">(</span>Y<span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token keyword\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Length of Longest Common Substring is'</span><span class=\\"token punctuation\\">,</span>\\n      LCSubStr<span class=\\"token punctuation\\">(</span>X<span class=\\"token punctuation\\">,</span> Y<span class=\\"token punctuation\\">,</span> m<span class=\\"token punctuation\\">,</span> n<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
