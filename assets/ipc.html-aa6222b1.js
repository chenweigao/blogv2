const e=JSON.parse('{"key":"v-4ed4f65e","path":"/java/android/ipc.html","title":"IPC Binder 之杂谈","lang":"zh-CN","frontmatter":{"title":"IPC Binder 之杂谈","shortTitle":"IPC","date":"2023-06-19T00:00:00.000Z","tag":["kernel","Android","Binder"],"category":["Android"],"description":"Abstract 进程间通信（IPC） 在系统中非常重要，目前 Android 的 binder 方案已经属于行业内非常优秀的实践案例；但是作为软件从业人员，如果仅仅满足于现有架构或者技术的优势，这是远远不够的。所以本文有几个重要的目的： 第一是从对比、实践、设计的角度去看看 binder 有什么缺陷和改进点 第二是研究一下业界最新的技术是如何优化 IPC 的，或者说有没有什么新的思路借鉴？ 第三是一些杂谈 Binder 优缺点 优点 对于 binder 具体的分析可以看我的另一篇博文《Research on Binder》，在此对具体的技术细节就不进行赘述，总的来看，binder 的优点包括以下几个：","head":[["meta",{"property":"og:url","content":"https://vueblog.weigao.cc/java/android/ipc.html"}],["meta",{"property":"og:site_name","content":"WW"}],["meta",{"property":"og:title","content":"IPC Binder 之杂谈"}],["meta",{"property":"og:description","content":"Abstract 进程间通信（IPC） 在系统中非常重要，目前 Android 的 binder 方案已经属于行业内非常优秀的实践案例；但是作为软件从业人员，如果仅仅满足于现有架构或者技术的优势，这是远远不够的。所以本文有几个重要的目的： 第一是从对比、实践、设计的角度去看看 binder 有什么缺陷和改进点 第二是研究一下业界最新的技术是如何优化 IPC 的，或者说有没有什么新的思路借鉴？ 第三是一些杂谈 Binder 优缺点 优点 对于 binder 具体的分析可以看我的另一篇博文《Research on Binder》，在此对具体的技术细节就不进行赘述，总的来看，binder 的优点包括以下几个："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Someone"}],["meta",{"property":"article:tag","content":"kernel"}],["meta",{"property":"article:tag","content":"Android"}],["meta",{"property":"article:tag","content":"Binder"}],["meta",{"property":"article:published_time","content":"2023-06-19T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"IPC Binder 之杂谈\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-19T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Someone\\",\\"url\\":\\"https://www.weigao.cc\\"}]}"]]},"headers":[{"level":2,"title":"Abstract","slug":"abstract","link":"#abstract","children":[]},{"level":2,"title":"Binder 优缺点","slug":"binder-优缺点","link":"#binder-优缺点","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]},{"level":2,"title":"其他选择：dIPC","slug":"其他选择-dipc","link":"#其他选择-dipc","children":[{"level":3,"title":"dIPC 设计理念","slug":"dipc-设计理念","link":"#dipc-设计理念","children":[]},{"level":3,"title":"dIPC 优点","slug":"dipc-优点","link":"#dipc-优点","children":[]},{"level":3,"title":"dIPC 缺点","slug":"dipc-缺点","link":"#dipc-缺点","children":[]}]},{"level":2,"title":"Axx","slug":"axx","link":"#axx","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{},"readingTime":{"minutes":5.86,"words":1759},"filePathRelative":"java/android/ipc.md","localizedDate":"2023年6月19日","excerpt":"<h2> Abstract</h2>\\n<p>进程间通信（IPC） 在系统中非常重要，目前 Android 的 binder 方案已经属于行业内非常优秀的实践案例；但是作为软件从业人员，如果仅仅满足于现有架构或者技术的优势，这是远远不够的。所以本文有几个重要的目的：</p>\\n<ol>\\n<li>第一是从对比、实践、设计的角度去看看 binder 有什么缺陷和改进点</li>\\n<li>第二是研究一下业界最新的技术是如何优化 IPC 的，或者说有没有什么新的思路借鉴？</li>\\n<li>第三是一些杂谈</li>\\n</ol>\\n<h2> Binder 优缺点</h2>\\n<h3> 优点</h3>\\n<p>对于 binder 具体的分析可以看我的另一篇博文《Research on Binder》，在此对具体的技术细节就不进行赘述，总的来看，binder 的优点包括以下几个：</p>","autoDesc":true}');export{e as data};
